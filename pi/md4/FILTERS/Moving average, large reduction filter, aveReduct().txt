# Moving average, large reduction filter, aveReduct()
Moving average reduction Filter replaces each n values with 1 value, their average. The advantage of this filter is noise reduction by having fewer values. Recommend using median filter first to remove large errors. Any leftover elements are discarded.

import numpy as np
from math import floor,ceil
from statistics import mean
x = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]
n = 2

# x is the input array. y is the output array.
# len(y) = floor(len(x)/n).
def aveReduct(x,n):
    num = len(x) / n
    y = [0] * floor(num)
    if len(x)>=1:
        for j in range(0,floor(num)):
            y[j]=mean(x[j*n:j*n+n])
    else:
        y=x
    return y

aveReduct(x,n)

>> [1.5, 3.5, 5.5, 7.5, 9.5, 11.5, 13.5]



