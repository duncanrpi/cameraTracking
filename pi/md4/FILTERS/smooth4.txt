# smooth4() tries to preserve the extreme values at the edges of a sequence,
# but still do some smoothing there. The exceptions are the very first and last 
# values which are smoothed in nearby groups of 3.

# numbers far enough inside to be in the middle of n numbers
#  are smoothed with those numbers (groups of n).
# For numbers not far enough inside, they are in the middle of an 
#  odd number of numbers. They are smoothed with those numbers. 

# first & last numbers are smoothed with 2 adjacent values (groupss of 3)
# if n>3, numbers next to first & last are smoothed with adjacent numbers (groups of 3)
# if n>5, numbers 2nd from first & last are smoothed with adjacent numbers (groups of 5), etc.

# x is an input list with length = len(x).
# n is the number of points being smoothed each time. n = 2K + 1, the filter size.
# y is an output list with length = len(x).
# The length is not reduced.

# Required: n >= 3 and is odd
def smooth4(x,n): 
    if len(x)>=n:       
        y = [0] * len(x)  
        for j in range(len(x)):
            if j < n//2 and j != 0:
                y[j]=mean(x[0:3])
            elif j == 0:
                y[j]=mean(x[0:2*j+3])
            elif j > len(x)-n//2-1 and j != len(x)-1:
                y[j]=mean(x[2*j-len(x)+1:len(x)]) 
            elif j == len(x)-1:
                y[j]=mean(x[len(x)-3:len(x)])
            else:
                y[j]=mean(x[j-n//2:j+n//2+1])
    else:
        y=x
    return y