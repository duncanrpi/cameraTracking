# smooth3() tries to preserve the extreme values at the edges of a sequence,
# but still do some smoothing there

# In this file,
# x is an input list with length = len(x).
# n is the number of points being averaged each time.
# y is an output list with length = len(x).
# The length is not reduced.

# numbers far enough inside to be in the middle of n numbers
#  are averaged with those numbers (groups of n).
# For numbers not far enough inside, they are in the middle of an 
#  odd number of numbers. They are averaged with those numbers. 

# first & last numbers are unchanged
# if n>3, numbers next to first & last are averaged with adjacent numbers (groups of 3)
# if n>5, numbers 2nd from first & last are averaged with adjacent numbers (groups of 5), etc.

# Required: n >= 3 and is odd
from statistics import mean
def smooth3(x,n):    
    if len(x)>=n:       
        y = [0] * len(x)        
        for j in range(len(x)):
            if j < n//2:
                y[j]=mean(x[0:2*j+1])
            elif j > len(x)-n//2-1:
                y[j]=mean(x[2*j-len(x)+1:len(x)]) 
            else:
                y[j]=mean(x[j-n//2:j+n//2+1])
    else:
        y=x
    return y